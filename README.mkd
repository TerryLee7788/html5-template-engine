# Html5 Template Engine
[![Build Status](https://travis-ci.org/appleboy/html5-template-engine.png)](http://travis-ci.org/appleboy/html5-template-engine)

## Features

* The latest [html5boilerplate.com](http://html5boilerplate.com/) source code.
* Includes [Normalize.scss](https://github.com/appleboy/normalize.scss) v2.1.x and v1.1.x.
* The latest [jQuery](http://jquery.com/) and [Modernizr](http://modernizr.com/) via [Bower](http://bower.io/) package manager.
* Support [CoffeeScript](http://coffeescript.org/), [RequireJS](http://requirejs.org/), [Compass](http://compass-style.org/), html minification (via [htmlcompressor](http://code.google.com/p/htmlcompressor/)).
* A lightweight web server listen to 4000 port (Using [Node Express Framework](http://expressjs.com/)).
* Support JavaScript Task Runner [GruntJS](http://gruntjs.com/).
* Support JavaScript test framework [Mocha](http://visionmedia.github.io/mocha/).
* Support documentation generator [Docco](http://jashkenas.github.io/docco/).
* Support streaming build system [Gulp](http://gulpjs.com/).
* Support [Terminal in Chrome Devtools](http://www.html5rocks.com/en/tutorials/developertools/devtools-terminal/).
* Support Minify PNG and JPEG images with [image-min](https://github.com/sindresorhus/gulp-imagemin).

## Support Terminal in Chrome Devtools

If you’re on a Mac, just download this [Chrome extension](https://chrome.google.com/webstore/detail/leakmhneaibbdapdoienlkifomjceknl). Install it, and you good to go. No need to read any further.

If you’re not on a Mac, you can connect to your system’s terminal via Node.js proxy. It can be localhost or some other remote server.

    $ npm install -g devtools-terminal
    $ devtools-terminal --config terminal.js

Please refer more [detail information](http://www.html5rocks.com/en/tutorials/developertools/devtools-terminal/).

## Install develop tool

    $ ./build/build.sh

or

    $ curl https://raw.github.com/appleboy/html5-template-engine/master/build/build.sh | bash

## Setup Environment

Download source code.

    $ git clone https://github.com/appleboy/html5-template-engine.git

Install vendor library and npm library.

    $ npm install
    $ bower install

## Develop a project manually

### Use Compass CSS Framework

Compass is an open-source CSS Authoring Framework. http://compass-style.org/

    $ compass watch .

### Use CoffeeScript

CoffeeScript is a little language that compiles into JavaScript. http://coffeescript.org/

    $ coffee -b -w -c -o assets/js assets/coffeescript

### Minify Javascript using RequireJS

Using Makefile.

    $ make

or command line.

    $ r.js -o build/self.build.js

Testing minified javascript file. Please modify index.html and find the following text.

```
<script data-main="assets/js/main" src="assets/js/vendor/requirejs/require.js"></script>
```

Replace with:

```
<script data-main="assets/js/main-built" src="assets/js/vendor/requirejs/require.js"></script>
```

Run local server (use root permission)

    $ node build/server.js

Using Makefile.

    $ make server

open the following URL on browser.

```
http://your_host_name:4000/
```

## Develop a project automatically

Before using [GruntJS](http://gruntjs.com/) or [Gulp](http://gulpjs.com/) tool, please make sure excute the following command.

    $ npm install

### Using GruntJS

Using [GruntJS](http://gruntjs.com/) tool to setup develop environment.

    $ npm run grunt

Output the following message.

```
Running "init" task
Initial project

Running "connect:livereload" (connect) task
Started connect web server on localhost:4000.

Running "watch" task
Waiting...
```
Please install [livereload](http://livereload.com/) plugin depend on your browser. ex: [Safari extension](http://download.livereload.com/2.0.9/LiveReload-2.0.9.safariextz), [Firefox addon](http://download.livereload.com/2.0.8/LiveReload-2.0.8.xpi), or [Chrome extension](https://chrome.google.com/webstore/detail/livereload/jnihajbhpnppcggbcgedagnkighmdlei)

### Using Gulp

Using [Gulp](http://gulpjs.com/) tool to setup develop environment.

    $ npm run gulp

[CoffeeScript](http://coffeescript.org/) version

    $ npm run gulp-coffee

[LiveScript](http://livescript.net/) version

    $ npm run gulp-lsc

Output the following message.

```
[gulp] Using gulpfile /home/appleboy/html5-template-engine/gulpfile.js
[gulp] Starting 'clean'...
[gulp] Starting 'lint'...
[gulp] Starting 'connect'...
[gulp] Connect LiveReload on 35729 port
[gulp] Finished 'connect' after 11 ms
[gulp] Starting 'watch'...
[gulp] Finished 'watch' after 11 ms
[gulp] Server started on 1337 port
[gulp] Finished 'clean' after 43 ms
[gulp] gulp-size: total 2.92 kB
[gulp] Finished 'lint' after 87 ms
[gulp] Starting 'default'...
[gulp] Finished 'default' after 8.06 μs
```

## Deploy Your App

### Using Makefile

    $ make release

or defined your build output path. (default: output)

    $ make -m output_path=output2 release

### Using GruntJS

    $ ./node_modules/.bin/grunt release

Copy ``output`` folder to your root document path.

    $ cp -r output /var/www/html5

open the following URL on browser.

```
http://your_host_name/html5/
```

## Test Your Project

### Using Makefile

    $ make test

### Using GruntJS

    $ ./node_modules/.bin/grunt test

## Clean Your Project

### Using Makefile

    $ make clean

### Using GruntJS

    $ ./node_modules/.bin/grunt clean

## Author

Bo-Yi Wu, Twitter: [@appleboy](http://twitter.com/appleboy "Twitter"), Blog: http://blog.wu-boy.com
